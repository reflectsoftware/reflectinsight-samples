<?xml version="1.0"?>
<configuration>
  <insightSettings>
    <baseSettings>
      <configChange enabled="true"/>
      <enable state="all"/>
      <propagateException enabled="false"/>
      <global category="ReflectInsight"/>
      <senderName name="Your_Application_Name"/>
      <exceptionEventTracker time="20"/>
      <!--<debugMessageProcess enabled="true" />-->
    </baseSettings>

    <httpModule>
      <properties name="myDebugHttpProperties">
        <userEnterEnterMethod value="true"/>
        <ignoreUrlsParts>
          <!-- will ignore urls that have any part of its path with any key words listed below -->
          <part name="/somepagetoignore.aspx"/>
          <part name="/someotherpagetoignore"/>
          <part name=".htm"/>
          <part name=".html"/>
          <part name=".css"/>
          <part name=".js"/>
          <part name=".gif"/>
          <part name=".png"/>
          <part name=".jpg"/>
          <part name=".bmp"/>
          <part name=".ico"/>
          <part name=".swf"/>
        </ignoreUrlsParts>
        <ignoreUsername value="false"/>
        <ignoreHeader all="false">
          <!-- will ignore these header values -->
          <parameter name="Connection"/>
          <parameter name="Host"/>
        </ignoreHeader>
        <ignoreQueryString all="false">
          <!-- will ignore these query string parameters -->
          <parameter name="name"/>
          <parameter name="location"/>
        </ignoreQueryString>
        <ignoreFormElements all="false">
          <!-- will ignore these form elements -->
          <element name="__VIEWSTATE"/>
          <element name="__EVENTVALIDATION"/>
          <element name="Password"/>
        </ignoreFormElements>
        <ignoreCookies all="false">
          <!-- will ignore these cookie names -->
          <cookie name="ASP.NET_SessionIdX"/>
        </ignoreCookies>
      </properties>
    </httpModule>

    <extensions>
      <extension name="riHttpModule" instance="httpModule" properties="myDebugHttpProperties" enabled="true"/>
    </extensions>

    <exceptionManagement mode="on">
      <publisher mode="on" name="EventPublisher" type="RI.Utils.ExceptionManagement.ExceptionEventPublisher, ReflectInsight.Insight" applicationName="ReflectInsight" />
    </exceptionManagement>

    <!-- Auto Save File -->
    <files default="">
      <autoSave name="DefaultSave" onNewDay="true" onMsgLimit="1000000" onSize="0" recycleFilesEvery="30" />
    </files>

    <messagePatterns>
      <messagePattern name="pattern1" pattern="[%time{yyyyMMdd, HH:mm:ss.fff}%] - %message%,&amp;#xA;%threadid%&amp;#xA;[%messagetype%]" />
    </messagePatterns>

    <!-- Routers -->
    <routers>
      <router name="MyRouterTCP"
              type="RI.Messaging.ReadWriter.Implementation.TCP.TCPWriter,ReflectSoftware.Insight"
              hostname="localhost"
              port="10881"
              connectionTimeout="3000"/>
    </routers>

    <!-- Listener Groups -->
    <listenerGroups active="Debug">
      <group name="Debug" enabled="true" maskIdentities="false">
        <destinations>
          <destination name="Viewer" enabled="true" details="Viewer" />
          <destination name="BinaryFile" enabled="true" filter="" details="BinaryFile[path=$(workingdir)\Logs\Log.rlg; autoSave=DefaultSave]" />
          <destination name="TextFile" enabled="true" filter="ErrorWarningFilter" details="TextFile[path=$(workingdir)\Logs\ErrorLog.txt; messageDetails=Message|Details; messagePattern=pattern1; autoSave=DefaultSave]" />
          <destination name="RouterTCP" enabled="true" filter="" details="Router[name=MyRouterTCP]" />
        </destinations>
      </group>
    </listenerGroups>

    <!-- Message Filters -->
    <filters>
      <filter name="ErrorWarningFilter" mode="Include">
        <method type="SendError"/>
        <method type="SendException"/>
        <method type="SendFatal"/>
      </filter>
    </filters>

    <!-- Log Manager -->
    <logManager>
      <instance name="httpModule" category="HttpModule"/>
    </logManager>
  </insightSettings>
</configuration>
